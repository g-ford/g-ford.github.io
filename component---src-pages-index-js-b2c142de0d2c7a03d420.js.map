{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/utils/media.js","webpack:///./src/utils/styled-link.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/post.js"],"names":["Title","styled","h3","withConfig","displayName","componentId","media","phone","_templateObject","BlogIndex","render","posts","this","props","data","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","title","keywords","map","_ref","node","_components_post__WEBPACK_IMPORTED_MODULE_6__","key","id","Component","pageQuery","sizes","desktop","tablet","Object","keys","reduce","acc","label","css","apply","arguments","styled_components__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","gatsby__WEBPACK_IMPORTED_MODULE_1__","StyledLink","Link","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","Container","nav","h1","Header","react_default","styled_link","to","GlobalStyles","createGlobalStyle","layout_templateObject","Footer","footer","Content","div","_templateObject2","Layout","children","gatsby_browser_entry","Fragment","header","_1044757290","h4","Post","_utils_styled_link__WEBPACK_IMPORTED_MODULE_4__","fields","slug","frontmatter","date","readingTime","text","dangerouslySetInnerHTML","__html","excerpt","shape"],"mappings":"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","file":"component---src-pages-index-js-b2c142de0d2c7a03d420.js","sourcesContent":["import React, { Component } from 'react';\nimport { graphql } from 'gatsby';\nimport styled from 'styled-components';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport Post from '../components/post';\nimport media from '../utils/media';\n\nconst Title = styled.h3`\n  font-weight: 800;\n  font-size: 2.6rem;\n  margin: 6rem 0 0;\n\n  ${media.phone`\n    margin: 3rem 0 0;\n  `}\n`;\n\nclass BlogIndex extends Component {\n  render() {\n    const { data } = this.props;\n    const posts = data.allMarkdownRemark.edges;\n    return (\n      <Layout>\n        <SEO title=\"All Posts\" keywords={[`gatsby`, `blog`, `react`]} />\n        <main>\n          <Title>Latest Posts</Title>\n          {posts.map(({ node }) => {\n            return <Post key={node.id} node={node} />;\n          })}\n        </main>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogIndex;\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 160)\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import { css } from 'styled-components';\n\nconst sizes = {\n  desktop: 992,\n  tablet: 768,\n  phone: 576,\n};\n\n// Iterate through the sizes and create a media template\nconst media = Object.keys(sizes).reduce((acc, label) => {\n  acc[label] = (...args) => css`\n    @media (max-width: ${sizes[label] / 16}em) {\n      ${css(...args)}\n    }\n  `;\n\n  return acc;\n}, {});\n\nexport default media;\n","import styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nexport default StyledLink;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport StyledLink from '../utils/styled-link';\nimport media from '../utils/media';\n\nconst Container = styled.nav`\n  box-shadow: 0 4px 12px 0 rgba(0, 0, 0, 0.05);\n  height: 6rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 1.6rem;\n  font-weight: 800;\n  letter-spacing: 0.1rem;\n  text-transform: uppercase;\n  margin: 0;\n\n  ${media.phone`\n    text-align: center;\n  `}\n`;\n\nconst Header = ({ title }) => (\n  <Container>\n    <StyledLink to={'/'}>\n      <Title>{title}</Title>\n    </StyledLink>\n  </Container>\n);\n\nHeader.defaultProps = {\n  title: '',\n};\n\nHeader.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport media from '../utils/media';\n\nconst GlobalStyles = createGlobalStyle`\n  @font-face {\n    font-family: system;\n    font-style: normal;\n    font-weight: 300;\n    src: local('.SFNSText-Light'), local('.HelveticaNeueDeskInterface-Light'),\n      local('.LucidaGrandeUI'), local('Ubuntu Light'), local('Segoe UI Light'),\n      local('Roboto-Light'), local('DroidSans'), local('Tahoma');\n  }\n\n  :root {\n    font-size: 10px;\n  }\n\n  body {\n    font-family: 'system';\n    margin: 0;\n    text-rendering: optimizeLegibility;\n    -webkit-font-smoothing: antialiased;\n    color: rgba(0, 0, 0, 0.8);\n    min-height: 100vh;\n    position: relative;\n    font-size: 1.6rem;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    font-family: 'Oswald', sans-serif;\n  }\n\n  h2 {\n    font-size: 2.5rem;\n  }\n\n  h3 {\n    font-size: 2.4rem;\n  }\n\n  h4 {\n    font-size: 1.6rem;\n  }\n\n  code {\n    font-family: Menlo,Monaco,\"Courier New\",Courier,monospace;\n    word-break: break-word;\n  }\n\n  pre code {\n    word-break: normal;\n  }\n\n  :not(pre) > code[class*=\"language-\"], pre[class*=\"language-text\"] {\n    background-color: transparent;\n    color: inherit;\n    font-size: medium;\n  }\n`;\n\nconst Footer = styled.footer`\n  display: block;\n  height: 6rem;\n`;\n\nconst Content = styled.div`\n  width: 60%;\n  max-width: 728px;\n  margin: 0 auto;\n\n  ${media.tablet`\n    width: 80%;\n  `}\n`;\n\nclass Layout extends Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <StaticQuery\n        query={graphql`\n          query SiteTitleQuery {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n          }\n        `}\n        render={data => (\n          <>\n            <Header title={data.site.siteMetadata.title} />\n            <Content>{children}</Content>\n            <Footer />\n            <GlobalStyles />\n          </>\n        )}\n      />\n    );\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport StyledLink from '../utils/styled-link';\nimport media from '../utils/media';\n\nconst Container = styled.div`\n  padding: 1rem 0;\n  margin: 1rem 0;\n\n  &:first-child {\n    margin-top: 0;\n  }\n\n  ${media.phone`\n    margin: 0.5rem 0;\n    padding: 0.4rem 0;\n  `}\n`;\n\nconst Title = styled.h4`\n  margin-bottom: 0.2rem;\n  font-size: 2.2rem;\n`;\n\nconst Post = ({ node }) => (\n  <StyledLink to={node.fields.slug}>\n    <Container>\n      <Title>{node.frontmatter.title}</Title>\n      <sub>\n        <span>on {node.frontmatter.date}</span>\n        <span>&nbsp; - &nbsp;</span>\n        <span>{node.fields.readingTime.text}</span>\n      </sub>\n      <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n    </Container>\n  </StyledLink>\n);\n\nPost.propTypes = {\n  node: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    frontmatter: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n    }),\n    fields: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n    }),\n    excerpt: PropTypes.string.isRequired,\n  }),\n};\n\nexport default Post;\n"],"sourceRoot":""}