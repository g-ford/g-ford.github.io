{"version":3,"sources":["webpack:///./src/components/share.js","webpack:///./src/templates/blog-post.js","webpack:///./src/utils/media.js","webpack:///./src/utils/styled-link.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/templates/post-styles.js"],"names":["Container","styled","div","withConfig","displayName","componentId","Share","props","_this","_Component","call","this","state","url","componentDidMount","setState","window","location","href","render","post","react_default","a","createElement","_StyledP","Fragment","FacebookShareButton","quote","title","author","className","FacebookIcon","size","round","TwitterShareButton","TwitterIcon","EmailShareButton","subject","body","excerpt","EmailIcon","RedditShareButton","RedditIcon","Component","propTypes","PropTypes","shape","string","isRequired","BlogPostTemplate","data","markdownRemark","tags","frontmatter","siteTitle","site","siteMetadata","_this$props$pageConte","pageContext","previous","next","tagsBlock","post_styles","map","tag","i","key","gatsby_browser_entry","to","layout","seo","description","_StyledSub","date","fields","readingTime","text","_StyledDiv","dangerouslySetInnerHTML","__html","html","share","slug","rel","React","pageQuery","sizes","desktop","tablet","phone","media","Object","keys","reduce","acc","label","css","apply","arguments","styled_components__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","gatsby__WEBPACK_IMPORTED_MODULE_1__","StyledLink","Link","SEO","_ref","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","nav","Title","h1","_templateObject","Header","styled_link","GlobalStyles","createGlobalStyle","layout_templateObject","Footer","footer","Content","_templateObject2","Layout","children","header","_1044757290","node","Tags","ul","article","LinkList"],"mappings":"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","file":"component---src-templates-blog-post-js-24201906f4478a863d6b.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  TwitterIcon,\n  TwitterShareButton,\n  EmailShareButton,\n  EmailIcon,\n  RedditShareButton,\n  RedditIcon,\n} from 'react-share';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin: 1rem 0 5rem;\n\n  .social-icon {\n    display: inline-block;\n    margin: 0 0.5rem;\n    cursor: pointer;\n  }\n`;\n\nclass Share extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: null,\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      url: window.location.href,\n    });\n  }\n  render() {\n    const { post } = this.props;\n    const { url } = this.state;\n    return (\n      <Container>\n        <p\n          css={`\n            font-size: 1.4rem;\n            color: rgb(0, 0, 0);\n          `}\n        >\n          Share if you liked it:\n        </p>\n        {url && (\n          <>\n            <FacebookShareButton\n              url={url}\n              quote={`Read ${post.title} by ${post.author}`}\n              className=\"social-icon\"\n            >\n              <FacebookIcon size={32} round />\n            </FacebookShareButton>\n            <TwitterShareButton\n              url={url}\n              title={`Read ${post.title} by ${post.author}`}\n              className=\"social-icon\"\n            >\n              <TwitterIcon size={32} round />\n            </TwitterShareButton>\n            <EmailShareButton\n              url={url}\n              subject={`Read ${post.title} by ${post.author}`}\n              body={`${post.excerpt}\n                Read more at ${url}\n              `}\n              className=\"social-icon\"\n            >\n              <EmailIcon size={32} round />\n            </EmailShareButton>\n            <RedditShareButton url={url} className=\"social-icon\">\n              <RedditIcon size={32} round />\n            </RedditShareButton>\n          </>\n        )}\n      </Container>\n    );\n  }\n}\n\nShare.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    excerpt: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Share;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { Container, Title, LinkList, Header, Tags } from './post-styles';\nimport Share from '../components/share';\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const tags = this.props.data.markdownRemark.frontmatter.tags;\n    const siteTitle = this.props.data.site.siteMetadata.title;\n    const author = this.props.data.site.siteMetadata.author;\n    const { previous, next } = this.props.pageContext;\n\n    const tagsBlock = (\n      <div className=\"post-single__tags\">\n        <Tags>\n          {tags &&\n            tags.map((tag, i) => (\n              <li className=\"post-single__tags-list-item\" key={tag}>\n                <Link\n                  to={'/tags/' + tag}\n                  className=\"post-single__tags-list-item-link\"\n                >\n                  {post.frontmatter.tags[i]}\n                </Link>\n              </li>\n            ))}\n        </Tags>\n      </div>\n    );\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title={post.frontmatter.title} description={post.excerpt} />\n        <Container>\n          <Header>\n            <Title>{post.frontmatter.title}</Title>\n            <sub\n              css={`\n                color: rgba(0, 0, 0, 0.8);\n              `}\n            >\n              <span>Posted on {post.frontmatter.date}</span>\n              <span>&nbsp; - &nbsp;</span>\n              <span>{post.fields.readingTime.text}</span>\n            </sub>\n            {tagsBlock}\n          </Header>\n          <div\n            css={`\n              margin: 5rem 0;\n            `}\n            dangerouslySetInnerHTML={{ __html: post.html }}\n          />\n          <Share\n            post={{\n              title: post.frontmatter.title,\n              excerpt: post.excerpt,\n              author: author,\n            }}\n          />\n          <LinkList>\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </LinkList>\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt\n      html\n      fields {\n        readingTime {\n          text\n        }\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        tags\n      }\n    }\n  }\n`;\n","import { css } from 'styled-components';\n\nconst sizes = {\n  desktop: 992,\n  tablet: 768,\n  phone: 576,\n};\n\n// Iterate through the sizes and create a media template\nconst media = Object.keys(sizes).reduce((acc, label) => {\n  acc[label] = (...args) => css`\n    @media (max-width: ${sizes[label] / 16}em) {\n      ${css(...args)}\n    }\n  `;\n\n  return acc;\n}, {});\n\nexport default media;\n","import styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nexport default StyledLink;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport StyledLink from '../utils/styled-link';\nimport media from '../utils/media';\n\nconst Container = styled.nav`\n  box-shadow: 0 4px 12px 0 rgba(0, 0, 0, 0.05);\n  height: 6rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 1.6rem;\n  font-weight: 800;\n  letter-spacing: 0.1rem;\n  text-transform: uppercase;\n  margin: 0;\n\n  ${media.phone`\n    text-align: center;\n  `}\n`;\n\nconst Header = ({ title }) => (\n  <Container>\n    <StyledLink to={'/'}>\n      <Title>{title}</Title>\n    </StyledLink>\n  </Container>\n);\n\nHeader.defaultProps = {\n  title: '',\n};\n\nHeader.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport media from '../utils/media';\n\nconst GlobalStyles = createGlobalStyle`\n  @font-face {\n    font-family: system;\n    font-style: normal;\n    font-weight: 300;\n    src: local('.SFNSText-Light'), local('.HelveticaNeueDeskInterface-Light'),\n      local('.LucidaGrandeUI'), local('Ubuntu Light'), local('Segoe UI Light'),\n      local('Roboto-Light'), local('DroidSans'), local('Tahoma');\n  }\n\n  :root {\n    font-size: 10px;\n  }\n\n  body {\n    font-family: 'system';\n    margin: 0;\n    text-rendering: optimizeLegibility;\n    -webkit-font-smoothing: antialiased;\n    color: rgba(0, 0, 0, 0.8);\n    min-height: 100vh;\n    position: relative;\n    font-size: 1.6rem;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    font-family: 'Oswald', sans-serif;\n  }\n\n  h2 {\n    font-size: 2.5rem;\n  }\n\n  h3 {\n    font-size: 2.4rem;\n  }\n\n  h4 {\n    font-size: 1.6rem;\n  }\n\n  code {\n    font-family: Menlo,Monaco,\"Courier New\",Courier,monospace;\n    word-break: break-word;\n  }\n\n  pre code {\n    word-break: normal;\n  }\n\n  :not(pre) > code[class*=\"language-\"], pre[class*=\"language-text\"] {\n    background-color: transparent;\n    color: inherit;\n    font-size: medium;\n  }\n`;\n\nconst Footer = styled.footer`\n  display: block;\n  height: 6rem;\n`;\n\nconst Content = styled.div`\n  width: 60%;\n  max-width: 728px;\n  margin: 0 auto;\n\n  ${media.tablet`\n    width: 80%;\n  `}\n`;\n\nclass Layout extends Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <StaticQuery\n        query={graphql`\n          query SiteTitleQuery {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n          }\n        `}\n        render={data => (\n          <>\n            <Header title={data.site.siteMetadata.title} />\n            <Content>{children}</Content>\n            <Footer />\n            <GlobalStyles />\n          </>\n        )}\n      />\n    );\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import styled from 'styled-components';\n\nimport media from '../utils/media';\n\nexport const Tags = styled.ul`\n  list-style: none;\n  margin: 0 -5px;\n  padding: 0;\n\n  li {\n    display: inline-block;\n    margin: 0.625rem 0.3125rem;\n\n    a {\n      background: #ebebeb;\n      text-decoration: none;\n      border: 0;\n      border-radius: 0.1875rem;\n      color: #555;\n      line-height: 1.625;\n      padding: 0.5rem 1rem;\n    }\n  }\n`;\n\nexport const Container = styled.article`\n  margin-top: 8rem;\n\n  ${media.phone`\n    margin-top: 4rem;\n  `}\n\n  p {\n    line-height: 1.5;\n  }\n\n  blockquote {\n    margin-left: 0.25rem;\n    font-size: 1.6rem;\n    color: inherit;\n    font-style: italic;\n    border-left: 0.2rem solid rgb(0, 0, 0);\n    padding-left: 1rem;\n    margin: 1rem 0;\n  }\n\n  pre {\n    margin-bottom: 2rem;\n  }\n\n  h3 {\n    line-height: 1.13;\n  }\n\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin: 2rem 0 2rem;\n  }\n\n  hr {\n    border: 0;\n    border-top: 0.1rem solid #ccc;\n    display: block;\n    height: 1rem;\n    padding: 0;\n  }\n\n  .gatsby-highlight pre {\n    display: block;\n    position: relative;\n    padding: 20px 0 0;\n    background: #193549;\n    color: #dcdcdc;\n    border-radius: 5px;\n    overflow-y: hidden;\n  }\n  .gatsby-highlight pre:before {\n    display: inline-block;\n    position: absolute;\n    top: 15px;\n    left: 20px;\n    width: 10px;\n    height: 10px;\n    background-color: #ff5f56;\n    border-radius: 50%;\n    content: '';\n  }\n  .gatsby-highlight pre:after {\n    display: inline-block;\n    position: absolute;\n    top: 15px;\n    left: 40px;\n    width: 10px;\n    height: 10px;\n    background-color: #ffbd2e;\n    border-radius: 50%;\n    content: '';\n  }\n  .gatsby-highlight pre code:before {\n    display: inline-block;\n    position: absolute;\n    top: 15px;\n    left: 60px;\n    width: 10px;\n    height: 10px;\n    background-color: #27c93f;\n    border-radius: 50%;\n    content: '';\n  }\n  .gatsby-highlight pre code {\n    background: none;\n    border: none;\n    border-radius: 3px;\n    display: inline-block;\n    overflow: inherit;\n    padding: 1.58333rem;\n    white-space: inherit;\n    word-wrap: normal;\n    font-family: Inconsolata, monospace;\n  }\n  .gatsby-highlight code {\n    -moz-border-radius: 3px;\n    -webkit-border-radius: 3px;\n    white-space: pre;\n    white-space: pre-wrap;\n    white-space: pre-line;\n    white-space: -pre-wrap;\n    white-space: -o-pre-wrap;\n    white-space: -moz-pre-wrap;\n    white-space: -hp-pre-wrap;\n    word-wrap: break-word;\n    background: transparent;\n    color: #3b9cff;\n    display: inline;\n    font-family: D2Coding, 'D2 coding', monospace, serif;\n    max-width: 100%;\n    overflow: auto;\n    padding: 0 0.1625rem;\n  }\n  .gatsby-highlight pre code {\n    color: #dcdcdc;\n  }\n`;\n\nexport const Header = styled.header`\n  ${media.tablet`\n    text-align: center;\n  `};\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 1rem;\n  font-size: 3rem;\n`;\n\nexport const LinkList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  list-style: none;\n  padding: 0px;\n`;\n"],"sourceRoot":""}