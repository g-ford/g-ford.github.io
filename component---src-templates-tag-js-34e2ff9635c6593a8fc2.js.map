{"version":3,"sources":["webpack:///./src/templates/tag.js","webpack:///./src/utils/media.js","webpack:///./src/utils/styled-link.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/templates/post-styles.js","webpack:///./src/components/post.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","_components_post__WEBPACK_IMPORTED_MODULE_3__","_post_styles__WEBPACK_IMPORTED_MODULE_4__","Tags","_ref","pageContext","data","tag","location","_data$tag","edges","totalCount","tagHeader","a","createElement","title","keywords","map","_ref2","node","key","id","sizes","desktop","tablet","phone","media","Object","keys","reduce","acc","label","css","apply","arguments","styled_components__WEBPACK_IMPORTED_MODULE_0__","gatsby__WEBPACK_IMPORTED_MODULE_1__","StyledLink","styled","Link","withConfig","displayName","componentId","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","render","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","Container","nav","Title","h1","_templateObject","Header","react_default","styled_link","to","GlobalStyles","createGlobalStyle","layout_templateObject","Footer","footer","Content","div","_templateObject2","Layout","children","this","props","gatsby_browser_entry","Fragment","header","_1044757290","Component","ul","article","LinkList","h4","Post","_utils_styled_link__WEBPACK_IMPORTED_MODULE_4__","fields","slug","frontmatter","date","readingTime","text","dangerouslySetInnerHTML","__html","excerpt","shape"],"mappings":"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","file":"component---src-templates-tag-js-34e2ff9635c6593a8fc2.js","sourcesContent":["import React from 'react';\n\n// Components\nimport { graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport Post from '../components/post';\nimport { Title } from './post-styles';\n\nconst Tags = ({ pageContext, data, location }) => {\n  const { tag } = pageContext;\n  const { edges, totalCount } = data.tag;\n\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? '' : 's'\n  } tagged with \"${tag}\"`;\n\n  return (\n    <Layout>\n      <SEO title={tagHeader} keywords={[`gatsby`, `blog`, `react`]} />\n      <main>\n        <Title>{tagHeader}</Title>\n        {edges.map(({ node }) => {\n          return <Post key={node.id} node={node} />;\n        })}\n      </main>\n    </Layout>\n  );\n};\n\nexport default Tags;\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    tag: allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          id\n          excerpt(pruneLength: 160)\n          fields {\n            slug\n            readingTime {\n              text\n            }\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`;\n","import { css } from 'styled-components';\n\nconst sizes = {\n  desktop: 992,\n  tablet: 768,\n  phone: 576,\n};\n\n// Iterate through the sizes and create a media template\nconst media = Object.keys(sizes).reduce((acc, label) => {\n  acc[label] = (...args) => css`\n    @media (max-width: ${sizes[label] / 16}em) {\n      ${css(...args)}\n    }\n  `;\n\n  return acc;\n}, {});\n\nexport default media;\n","import styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nexport default StyledLink;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport StyledLink from '../utils/styled-link';\nimport media from '../utils/media';\n\nconst Container = styled.nav`\n  box-shadow: 0 4px 12px 0 rgba(0, 0, 0, 0.05);\n  height: 6rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 1.6rem;\n  font-weight: 800;\n  letter-spacing: 0.1rem;\n  text-transform: uppercase;\n  margin: 0;\n\n  ${media.phone`\n    text-align: center;\n  `}\n`;\n\nconst Header = ({ title }) => (\n  <Container>\n    <StyledLink to={'/'}>\n      <Title>{title}</Title>\n    </StyledLink>\n  </Container>\n);\n\nHeader.defaultProps = {\n  title: '',\n};\n\nHeader.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport media from '../utils/media';\n\nconst GlobalStyles = createGlobalStyle`\n  @font-face {\n    font-family: system;\n    font-style: normal;\n    font-weight: 300;\n    src: local('.SFNSText-Light'), local('.HelveticaNeueDeskInterface-Light'),\n      local('.LucidaGrandeUI'), local('Ubuntu Light'), local('Segoe UI Light'),\n      local('Roboto-Light'), local('DroidSans'), local('Tahoma');\n  }\n\n  :root {\n    font-size: 10px;\n  }\n\n  body {\n    font-family: 'system';\n    margin: 0;\n    text-rendering: optimizeLegibility;\n    -webkit-font-smoothing: antialiased;\n    color: rgba(0, 0, 0, 0.8);\n    min-height: 100vh;\n    position: relative;\n    font-size: 1.6rem;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    font-family: 'Oswald', sans-serif;\n  }\n\n  h2 {\n    font-size: 2.5rem;\n  }\n\n  h3 {\n    font-size: 2.4rem;\n  }\n\n  h4 {\n    font-size: 1.6rem;\n  }\n\n  code {\n    font-family: Menlo,Monaco,\"Courier New\",Courier,monospace;\n    word-break: break-word;\n  }\n\n  pre code {\n    word-break: normal;\n  }\n\n  :not(pre) > code[class*=\"language-\"], pre[class*=\"language-text\"] {\n    background-color: transparent;\n    color: inherit;\n    font-size: medium;\n  }\n`;\n\nconst Footer = styled.footer`\n  display: block;\n  height: 6rem;\n`;\n\nconst Content = styled.div`\n  width: 60%;\n  max-width: 728px;\n  margin: 0 auto;\n\n  ${media.tablet`\n    width: 80%;\n  `}\n`;\n\nclass Layout extends Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <StaticQuery\n        query={graphql`\n          query SiteTitleQuery {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n          }\n        `}\n        render={data => (\n          <>\n            <Header title={data.site.siteMetadata.title} />\n            <Content>{children}</Content>\n            <Footer />\n            <GlobalStyles />\n          </>\n        )}\n      />\n    );\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n","import styled from 'styled-components';\n\nimport media from '../utils/media';\n\nexport const Tags = styled.ul`\n  list-style: none;\n  margin: 0 -5px;\n  padding: 0;\n\n  li {\n    display: inline-block;\n    margin: 0.625rem 0.3125rem;\n\n    a {\n      background: #ebebeb;\n      text-decoration: none;\n      border: 0;\n      border-radius: 0.1875rem;\n      color: #555;\n      line-height: 1.625;\n      padding: 0.5rem 1rem;\n    }\n  }\n`;\n\nexport const Container = styled.article`\n  margin-top: 8rem;\n\n  ${media.phone`\n    margin-top: 4rem;\n  `}\n\n  p {\n    line-height: 1.5;\n  }\n\n  blockquote {\n    margin-left: 0.25rem;\n    font-size: 1.6rem;\n    color: inherit;\n    font-style: italic;\n    border-left: 0.2rem solid rgb(0, 0, 0);\n    padding-left: 1rem;\n    margin: 1rem 0;\n  }\n\n  pre {\n    margin-bottom: 2rem;\n  }\n\n  h3 {\n    line-height: 1.13;\n  }\n\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin: 2rem 0 2rem;\n  }\n\n  hr {\n    border: 0;\n    border-top: 0.1rem solid #ccc;\n    display: block;\n    height: 1rem;\n    padding: 0;\n  }\n\n  .gatsby-highlight pre {\n    display: block;\n    position: relative;\n    padding: 20px 0 0;\n    background: #193549;\n    color: #dcdcdc;\n    border-radius: 5px;\n    overflow-y: hidden;\n  }\n  .gatsby-highlight pre:before {\n    display: inline-block;\n    position: absolute;\n    top: 15px;\n    left: 20px;\n    width: 10px;\n    height: 10px;\n    background-color: #ff5f56;\n    border-radius: 50%;\n    content: '';\n  }\n  .gatsby-highlight pre:after {\n    display: inline-block;\n    position: absolute;\n    top: 15px;\n    left: 40px;\n    width: 10px;\n    height: 10px;\n    background-color: #ffbd2e;\n    border-radius: 50%;\n    content: '';\n  }\n  .gatsby-highlight pre code:before {\n    display: inline-block;\n    position: absolute;\n    top: 15px;\n    left: 60px;\n    width: 10px;\n    height: 10px;\n    background-color: #27c93f;\n    border-radius: 50%;\n    content: '';\n  }\n  .gatsby-highlight pre code {\n    background: none;\n    border: none;\n    border-radius: 3px;\n    display: inline-block;\n    overflow: inherit;\n    padding: 1.58333rem;\n    white-space: inherit;\n    word-wrap: normal;\n    font-family: Inconsolata, monospace;\n  }\n  .gatsby-highlight code {\n    -moz-border-radius: 3px;\n    -webkit-border-radius: 3px;\n    white-space: pre;\n    white-space: pre-wrap;\n    white-space: pre-line;\n    white-space: -pre-wrap;\n    white-space: -o-pre-wrap;\n    white-space: -moz-pre-wrap;\n    white-space: -hp-pre-wrap;\n    word-wrap: break-word;\n    background: transparent;\n    color: #3b9cff;\n    display: inline;\n    font-family: D2Coding, 'D2 coding', monospace, serif;\n    max-width: 100%;\n    overflow: auto;\n    padding: 0 0.1625rem;\n  }\n  .gatsby-highlight pre code {\n    color: #dcdcdc;\n  }\n`;\n\nexport const Header = styled.header`\n  ${media.tablet`\n    text-align: center;\n  `};\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 1rem;\n  font-size: 3rem;\n`;\n\nexport const LinkList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  list-style: none;\n  padding: 0px;\n`;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport StyledLink from '../utils/styled-link';\nimport media from '../utils/media';\n\nconst Container = styled.div`\n  padding: 1rem 0;\n  margin: 1rem 0;\n\n  &:first-child {\n    margin-top: 0;\n  }\n\n  ${media.phone`\n    margin: 0.5rem 0;\n    padding: 0.4rem 0;\n  `}\n`;\n\nconst Title = styled.h4`\n  margin-bottom: 0.2rem;\n  font-size: 2.2rem;\n`;\n\nconst Post = ({ node }) => (\n  <StyledLink to={node.fields.slug}>\n    <Container>\n      <Title>{node.frontmatter.title}</Title>\n      <sub>\n        <span>on {node.frontmatter.date}</span>\n        <span>&nbsp; - &nbsp;</span>\n        <span>{node.fields.readingTime.text}</span>\n      </sub>\n      <p dangerouslySetInnerHTML={{ __html: node.excerpt }} />\n    </Container>\n  </StyledLink>\n);\n\nPost.propTypes = {\n  node: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    frontmatter: PropTypes.shape({\n      title: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n    }),\n    fields: PropTypes.shape({\n      slug: PropTypes.string.isRequired,\n    }),\n    excerpt: PropTypes.string.isRequired,\n  }),\n};\n\nexport default Post;\n"],"sourceRoot":""}