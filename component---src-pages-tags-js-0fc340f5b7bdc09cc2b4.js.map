{"version":3,"sources":["webpack:///./src/pages/tags.js","webpack:///./src/utils/media.js","webpack:///./src/utils/styled-link.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Title","styled","h3","withConfig","displayName","componentId","media","phone","_templateObject","TagIndex","render","tags","this","props","data","group","console","log","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_5__","_components_seo__WEBPACK_IMPORTED_MODULE_6__","title","keywords","map","_ref","fieldValue","totalCount","key","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","Component","pageQuery","sizes","desktop","tablet","Object","keys","reduce","acc","label","css","apply","arguments","styled_components__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","gatsby__WEBPACK_IMPORTED_MODULE_1__","StyledLink","Link","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","Container","nav","h1","Header","react_default","styled_link","GlobalStyles","createGlobalStyle","layout_templateObject","Footer","footer","Content","div","_templateObject2","Layout","children","gatsby_browser_entry","Fragment","header","_1044757290","node"],"mappings":"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","file":"component---src-pages-tags-js-0fc340f5b7bdc09cc2b4.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link, graphql } from 'gatsby';\nimport styled from 'styled-components';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport media from '../utils/media';\n\nconst Title = styled.h3`\n  font-weight: 800;\n  font-size: 2.6rem;\n  margin: 6rem 0 0;\n\n  ${media.phone`\n    margin: 3rem 0 0;\n  `}\n`;\n\nclass TagIndex extends Component {\n  render() {\n    const { data } = this.props;\n    const tags = data.tags.group;\n    console.log(tags);\n    return (\n      <Layout>\n        <SEO title=\"All Tags\" keywords={[`tags`, `blog`, `react`]} />\n        <main>\n          <Title>All Tags</Title>\n          <ul>\n            {tags.map(({ fieldValue, totalCount }) => (\n              <li key={fieldValue}>\n                <Link to={`/tags/${fieldValue}/`}>\n                  {fieldValue} ({totalCount})\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </main>\n      </Layout>\n    );\n  }\n}\n\nexport default TagIndex;\n\nexport const pageQuery = graphql`\n  query {\n    tags: allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      limit: 1000\n    ) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n    }\n  }\n`;\n","import { css } from 'styled-components';\n\nconst sizes = {\n  desktop: 992,\n  tablet: 768,\n  phone: 576,\n};\n\n// Iterate through the sizes and create a media template\nconst media = Object.keys(sizes).reduce((acc, label) => {\n  acc[label] = (...args) => css`\n    @media (max-width: ${sizes[label] / 16}em) {\n      ${css(...args)}\n    }\n  `;\n\n  return acc;\n}, {});\n\nexport default media;\n","import styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nexport default StyledLink;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport StyledLink from '../utils/styled-link';\nimport media from '../utils/media';\n\nconst Container = styled.nav`\n  box-shadow: 0 4px 12px 0 rgba(0, 0, 0, 0.05);\n  height: 6rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 1.6rem;\n  font-weight: 800;\n  letter-spacing: 0.1rem;\n  text-transform: uppercase;\n  margin: 0;\n\n  ${media.phone`\n    text-align: center;\n  `}\n`;\n\nconst Header = ({ title }) => (\n  <Container>\n    <StyledLink to={'/'}>\n      <Title>{title}</Title>\n    </StyledLink>\n  </Container>\n);\n\nHeader.defaultProps = {\n  title: '',\n};\n\nHeader.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport media from '../utils/media';\n\nconst GlobalStyles = createGlobalStyle`\n  @font-face {\n    font-family: system;\n    font-style: normal;\n    font-weight: 300;\n    src: local('.SFNSText-Light'), local('.HelveticaNeueDeskInterface-Light'),\n      local('.LucidaGrandeUI'), local('Ubuntu Light'), local('Segoe UI Light'),\n      local('Roboto-Light'), local('DroidSans'), local('Tahoma');\n  }\n\n  :root {\n    font-size: 10px;\n  }\n\n  body {\n    font-family: 'system';\n    margin: 0;\n    text-rendering: optimizeLegibility;\n    -webkit-font-smoothing: antialiased;\n    color: rgba(0, 0, 0, 0.8);\n    min-height: 100vh;\n    position: relative;\n    font-size: 1.6rem;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    font-family: 'Oswald', sans-serif;\n  }\n\n  h2 {\n    font-size: 2.5rem;\n  }\n\n  h3 {\n    font-size: 2.4rem;\n  }\n\n  h4 {\n    font-size: 1.6rem;\n  }\n\n  code {\n    font-family: Menlo,Monaco,\"Courier New\",Courier,monospace;\n    word-break: break-word;\n  }\n\n  pre code {\n    word-break: normal;\n  }\n\n  :not(pre) > code[class*=\"language-\"], pre[class*=\"language-text\"] {\n    background-color: transparent;\n    color: inherit;\n    font-size: medium;\n  }\n`;\n\nconst Footer = styled.footer`\n  display: block;\n  height: 6rem;\n`;\n\nconst Content = styled.div`\n  width: 60%;\n  max-width: 728px;\n  margin: 0 auto;\n\n  ${media.tablet`\n    width: 80%;\n  `}\n`;\n\nclass Layout extends Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <StaticQuery\n        query={graphql`\n          query SiteTitleQuery {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n          }\n        `}\n        render={data => (\n          <>\n            <Header title={data.site.siteMetadata.title} />\n            <Content>{children}</Content>\n            <Footer />\n            <GlobalStyles />\n          </>\n        )}\n      />\n    );\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}