{"version":3,"sources":["webpack:///./src/templates/post-styles.js","webpack:///./src/components/share.js","webpack:///./src/templates/blog-post.js","webpack:///./src/utils/media.js","webpack:///./src/utils/styled-link.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Container","styled","article","withConfig","displayName","componentId","media","phone","_templateObject","Header","header","tablet","_templateObject2","Title","h1","LinkList","ul","div","Share","props","_this","_Component","call","this","state","url","componentDidMount","setState","window","location","href","render","post","react_default","a","createElement","share_Container","_StyledP","Fragment","FacebookShareButton","quote","title","author","className","FacebookIcon","size","round","TwitterShareButton","TwitterIcon","EmailShareButton","subject","body","excerpt","EmailIcon","RedditShareButton","RedditIcon","Component","propTypes","PropTypes","shape","string","isRequired","BlogPostTemplate","data","markdownRemark","siteTitle","site","siteMetadata","_this$props$pageConte","pageContext","previous","next","layout","seo","frontmatter","description","_StyledSub","date","fields","readingTime","text","_StyledDiv","dangerouslySetInnerHTML","__html","html","share","gatsby_browser_entry","to","slug","rel","React","pageQuery","sizes","desktop","Object","keys","reduce","acc","label","css","apply","arguments","styled_components__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","gatsby__WEBPACK_IMPORTED_MODULE_1__","StyledLink","Link","SEO","_ref","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","array","arrayOf","nav","styled_link","GlobalStyles","createGlobalStyle","layout_templateObject","Footer","footer","Content","Layout","children","_1044757290","node"],"mappings":"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","file":"component---src-templates-blog-post-js-a9b8ed674718ca3e44b7.js","sourcesContent":["import styled from 'styled-components';\n\nimport media from '../utils/media';\n\nexport const Container = styled.article`\n  margin-top: 8rem;\n\n  ${media.phone`\n    margin-top: 4rem;\n  `}\n\n  p {\n    line-height: 1.5;\n  }\n\n  blockquote {\n    margin-left: 0.25rem;\n    font-size: 1.6rem;\n    color: inherit;\n    font-style: italic;\n    border-left: 0.2rem solid rgb(0, 0, 0);\n    padding-left: 1rem;\n    margin: 1rem 0;\n  }\n\n  pre {\n    margin-bottom: 2rem;\n  }\n\n  h3 {\n    line-height: 1.13;\n  }\n\n  h2,\n  h3,\n  h4,\n  h5,\n  h6 {\n    margin: 2rem 0 2rem;\n  }\n\n  hr {\n    border: 0;\n    border-top: 0.1rem solid #ccc;\n    display: block;\n    height: 1rem;\n    padding: 0;\n  }\n`;\n\nexport const Header = styled.header`\n  ${media.tablet`\n    text-align: center;\n  `};\n`;\n\nexport const Title = styled.h1`\n  margin-bottom: 1rem;\n  font-size: 3rem;\n`;\n\nexport const LinkList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between;\n  list-style: none;\n  padding: 0px;\n`;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  FacebookShareButton,\n  FacebookIcon,\n  TwitterIcon,\n  TwitterShareButton,\n  EmailShareButton,\n  EmailIcon,\n  RedditShareButton,\n  RedditIcon,\n} from 'react-share';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  margin: 1rem 0 5rem;\n\n  .social-icon {\n    display: inline-block;\n    margin: 0 0.5rem;\n    cursor: pointer;\n  }\n`;\n\nclass Share extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      url: null,\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      url: window.location.href,\n    });\n  }\n  render() {\n    const { post } = this.props;\n    const { url } = this.state;\n    return (\n      <Container>\n        <p\n          css={`\n            font-size: 1.4rem;\n            color: rgb(0, 0, 0);\n          `}\n        >\n          Share if you liked it:\n        </p>\n        {url && (\n          <>\n            <FacebookShareButton\n              url={url}\n              quote={`Read ${post.title} by ${post.author}`}\n              className=\"social-icon\"\n            >\n              <FacebookIcon size={32} round />\n            </FacebookShareButton>\n            <TwitterShareButton\n              url={url}\n              title={`Read ${post.title} by ${post.author}`}\n              className=\"social-icon\"\n            >\n              <TwitterIcon size={32} round />\n            </TwitterShareButton>\n            <EmailShareButton\n              url={url}\n              subject={`Read ${post.title} by ${post.author}`}\n              body={`${post.excerpt}\n                Read more at ${url}\n              `}\n              className=\"social-icon\"\n            >\n              <EmailIcon size={32} round />\n            </EmailShareButton>\n            <RedditShareButton url={url} className=\"social-icon\">\n              <RedditIcon size={32} round />\n            </RedditShareButton>\n          </>\n        )}\n      </Container>\n    );\n  }\n}\n\nShare.propTypes = {\n  post: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    excerpt: PropTypes.string.isRequired,\n    author: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default Share;\n","import React from 'react';\nimport { Link, graphql } from 'gatsby';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\nimport { Container, Title, LinkList, Header } from './post-styles';\nimport Share from '../components/share';\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark;\n    const siteTitle = this.props.data.site.siteMetadata.title;\n    const author = this.props.data.site.siteMetadata.author;\n    const { previous, next } = this.props.pageContext;\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title={post.frontmatter.title} description={post.excerpt} />\n        <Container>\n          <Header>\n            <Title>{post.frontmatter.title}</Title>\n            <sub\n              css={`\n                color: rgba(0, 0, 0, 0.8);\n              `}\n            >\n              <span>Posted on {post.frontmatter.date}</span>\n              <span>&nbsp; - &nbsp;</span>\n              <span>{post.fields.readingTime.text}</span>\n            </sub>\n          </Header>\n          <div\n            css={`\n              margin: 5rem 0;\n            `}\n            dangerouslySetInnerHTML={{ __html: post.html }}\n          />\n          <Share\n            post={{\n              title: post.frontmatter.title,\n              excerpt: post.excerpt,\n              author: author,\n            }}\n          />\n          <LinkList>\n            <li>\n              {previous && (\n                <Link to={previous.fields.slug} rel=\"prev\">\n                  ← {previous.frontmatter.title}\n                </Link>\n              )}\n            </li>\n            <li>\n              {next && (\n                <Link to={next.fields.slug} rel=\"next\">\n                  {next.frontmatter.title} →\n                </Link>\n              )}\n            </li>\n          </LinkList>\n        </Container>\n      </Layout>\n    );\n  }\n}\n\nexport default BlogPostTemplate;\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt\n      html\n      fields {\n        readingTime {\n          text\n        }\n      }\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n    }\n  }\n`;\n","import { css } from 'styled-components';\n\nconst sizes = {\n  desktop: 992,\n  tablet: 768,\n  phone: 576,\n};\n\n// Iterate through the sizes and create a media template\nconst media = Object.keys(sizes).reduce((acc, label) => {\n  acc[label] = (...args) => css`\n    @media (max-width: ${sizes[label] / 16}em) {\n      ${css(...args)}\n    }\n  `;\n\n  return acc;\n}, {});\n\nexport default media;\n","import styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nexport default StyledLink;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport StyledLink from '../utils/styled-link';\nimport media from '../utils/media';\n\nconst Container = styled.nav`\n  box-shadow: 0 4px 12px 0 rgba(0, 0, 0, 0.05);\n  height: 6rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 1.6rem;\n  font-weight: 800;\n  letter-spacing: 0.1rem;\n  text-transform: uppercase;\n  margin: 0;\n\n  ${media.phone`\n    text-align: center;\n  `}\n`;\n\nconst Header = ({ title }) => (\n  <Container>\n    <StyledLink to={'/'}>\n      <Title>{title}</Title>\n    </StyledLink>\n  </Container>\n);\n\nHeader.defaultProps = {\n  title: '',\n};\n\nHeader.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport media from '../utils/media';\n\nconst GlobalStyles = createGlobalStyle`\n  @font-face {\n    font-family: system;\n    font-style: normal;\n    font-weight: 300;\n    src: local('.SFNSText-Light'), local('.HelveticaNeueDeskInterface-Light'),\n      local('.LucidaGrandeUI'), local('Ubuntu Light'), local('Segoe UI Light'),\n      local('Roboto-Light'), local('DroidSans'), local('Tahoma');\n  }\n\n  :root {\n    font-size: 10px;\n  }\n\n  body {\n    font-family: 'system';\n    margin: 0;\n    text-rendering: optimizeLegibility;\n    -webkit-font-smoothing: antialiased;\n    color: rgba(0, 0, 0, 0.8);\n    min-height: 100vh;\n    position: relative;\n    font-size: 1.6rem;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    font-family: 'Oswald', sans-serif;\n  }\n\n  h2 {\n    font-size: 2.5rem;\n  }\n\n  h3 {\n    font-size: 2.4rem;\n  }\n\n  h4 {\n    font-size: 1.6rem;\n  }\n  \n  code {\n    font-family: Menlo,Monaco,\"Courier New\",Courier,monospace;\n    word-break: break-word;\n  }\n\n  pre code {\n    word-break: normal;\n  }\n\n  :not(pre) > code[class*=\"language-\"], pre[class*=\"language-text\"] {\n    background-color: transparent;\n    color: inherit;\n    font-size: medium;\n  }\n`;\n\nconst Footer = styled.footer`\n  display: block;\n  height: 6rem;\n`;\n\nconst Content = styled.div`\n  width: 60%;\n  max-width: 728px;\n  margin: 0 auto;\n\n  ${media.tablet`\n    width: 80%;\n  `}\n`;\n\nclass Layout extends Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <StaticQuery\n        query={graphql`\n          query SiteTitleQuery {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n          }\n        `}\n        render={data => (\n          <>\n            <Header title={data.site.siteMetadata.title} />\n            <Content>{children}</Content>\n            <Footer />\n            <GlobalStyles />\n          </>\n        )}\n      />\n    );\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}