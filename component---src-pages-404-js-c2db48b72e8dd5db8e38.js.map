{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./src/utils/media.js","webpack:///./src/utils/styled-link.js","webpack:///./src/components/seo.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js"],"names":["Container","styled","div","withConfig","displayName","componentId","NotFoundPage","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","_StyledSpan","role","aria-label","sizes","desktop","tablet","phone","media","Object","keys","reduce","acc","label","css","apply","arguments","styled_components__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","gatsby__WEBPACK_IMPORTED_MODULE_1__","StyledLink","Link","SEO","_ref","description","lang","meta","keywords","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","query","detailsQuery","render","data","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","propTypes","PropTypes","string","array","arrayOf","isRequired","nav","Title","h1","_templateObject","Header","react_default","styled_link","to","GlobalStyles","createGlobalStyle","layout_templateObject","Footer","footer","Content","_templateObject2","Layout","children","this","props","gatsby_browser_entry","Fragment","header","_1044757290","Component","node"],"mappings":"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","file":"component---src-pages-404-js-c2db48b72e8dd5db8e38.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst Container = styled.div`\n  text-align: center;\n`;\n\nconst NotFoundPage = () => (\n  <Layout>\n    <SEO title=\"404: Not found\" />\n    <Container>\n      <span\n        css={`\n          font-size: 10rem;\n          margin: 20vmin 0;\n          display: block;\n        `}\n        role=\"img\"\n        aria-label=\"facepalm emoji\"\n      >\n        ü§¶üèª‚Äç‚ôÇÔ∏è\n      </span>\n      <h1>NOT FOUND</h1>\n      <p>I have not added this page yet.</p>\n    </Container>\n  </Layout>\n);\n\nexport default NotFoundPage;\n","import { css } from 'styled-components';\n\nconst sizes = {\n  desktop: 992,\n  tablet: 768,\n  phone: 576,\n};\n\n// Iterate through the sizes and create a media template\nconst media = Object.keys(sizes).reduce((acc, label) => {\n  acc[label] = (...args) => css`\n    @media (max-width: ${sizes[label] / 16}em) {\n      ${css(...args)}\n    }\n  `;\n\n  return acc;\n}, {});\n\nexport default media;\n","import styled from 'styled-components';\nimport { Link } from 'gatsby';\n\nconst StyledLink = styled(Link)`\n  text-decoration: none;\n  color: rgba(0, 0, 0, 0.8);\n`;\n\nexport default StyledLink;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s | ${data.site.siteMetadata.title}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nimport StyledLink from '../utils/styled-link';\nimport media from '../utils/media';\n\nconst Container = styled.nav`\n  box-shadow: 0 4px 12px 0 rgba(0, 0, 0, 0.05);\n  height: 6rem;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nconst Title = styled.h1`\n  font-size: 1.6rem;\n  font-weight: 800;\n  letter-spacing: 0.1rem;\n  text-transform: uppercase;\n  margin: 0;\n\n  ${media.phone`\n    text-align: center;\n  `}\n`;\n\nconst Header = ({ title }) => (\n  <Container>\n    <StyledLink to={'/'}>\n      <Title>{title}</Title>\n    </StyledLink>\n  </Container>\n);\n\nHeader.defaultProps = {\n  title: '',\n};\n\nHeader.propTypes = {\n  title: PropTypes.string,\n};\n\nexport default Header;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styled, { createGlobalStyle } from 'styled-components';\nimport { StaticQuery, graphql } from 'gatsby';\n\nimport Header from './header';\nimport media from '../utils/media';\n\nconst GlobalStyles = createGlobalStyle`\n  @font-face {\n    font-family: system;\n    font-style: normal;\n    font-weight: 300;\n    src: local('.SFNSText-Light'), local('.HelveticaNeueDeskInterface-Light'),\n      local('.LucidaGrandeUI'), local('Ubuntu Light'), local('Segoe UI Light'),\n      local('Roboto-Light'), local('DroidSans'), local('Tahoma');\n  }\n\n  :root {\n    font-size: 10px;\n  }\n\n  body {\n    font-family: 'system';\n    margin: 0;\n    text-rendering: optimizeLegibility;\n    -webkit-font-smoothing: antialiased;\n    color: rgba(0, 0, 0, 0.8);\n    min-height: 100vh;\n    position: relative;\n    font-size: 1.6rem;\n  }\n\n  h1, h2, h3, h4, h5, h6 {\n    font-family: 'Oswald', sans-serif;\n  }\n\n  h2 {\n    font-size: 2.5rem;\n  }\n\n  h3 {\n    font-size: 2.4rem;\n  }\n\n  h4 {\n    font-size: 1.6rem;\n  }\n\n  code {\n    font-family: Menlo,Monaco,\"Courier New\",Courier,monospace;\n    word-break: break-word;\n  }\n\n  pre code {\n    word-break: normal;\n  }\n\n  :not(pre) > code[class*=\"language-\"], pre[class*=\"language-text\"] {\n    background-color: transparent;\n    color: inherit;\n    font-size: medium;\n  }\n`;\n\nconst Footer = styled.footer`\n  display: block;\n  height: 6rem;\n`;\n\nconst Content = styled.div`\n  width: 60%;\n  max-width: 728px;\n  margin: 0 auto;\n\n  ${media.tablet`\n    width: 80%;\n  `}\n`;\n\nclass Layout extends Component {\n  render() {\n    const { children } = this.props;\n    return (\n      <StaticQuery\n        query={graphql`\n          query SiteTitleQuery {\n            site {\n              siteMetadata {\n                title\n              }\n            }\n          }\n        `}\n        render={data => (\n          <>\n            <Header title={data.site.siteMetadata.title} />\n            <Content>{children}</Content>\n            <Footer />\n            <GlobalStyles />\n          </>\n        )}\n      />\n    );\n  }\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Layout;\n"],"sourceRoot":""}